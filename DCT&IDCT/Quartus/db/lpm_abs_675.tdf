--lpm_abs DEVICE_FAMILY="Stratix" LPM_WIDTH=18 data result
--VERSION_BEGIN 5.1 cbx_cycloneii 2005:12:13:10:36:54:SJ cbx_lpm_abs 2005:08:16:22:24:32:SJ cbx_lpm_add_sub 2005:11:02:10:42:42:SJ cbx_mgl 2006:01:12:16:15:18:SJ cbx_stratix 2005:12:28:11:18:26:SJ cbx_stratixii 2005:11:02:10:43:56:SJ cbx_util_mgl 2005:09:12:10:23:22:SJ  VERSION_END


--  Copyright (C) 1991-2006 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.


FUNCTION carry_sum (cin, sin)
RETURNS ( cout, sout);

--synthesis_resources = lut 18 
SUBDESIGN lpm_abs_675
( 
	data[17..0]	:	input;
	result[17..0]	:	output;
) 
VARIABLE 
	cs1a[17..0] : carry_sum;
	result_tmp[17..0]	: WIRE;

BEGIN 
	cs1a[].cin = ( ((data[17..17] $ data[17..1]) & cs1a[16..0].cout), ((! data[0..0]) & data[17..17]));
	cs1a[].sin = ( ((data[17..17] $ data[17..1]) $ cs1a[16..0].cout), data[0..0]);
	result[] = result_tmp[];
	result_tmp[] = ( cs1a[17..1].sout, data[0..0]);
END;
--VALID FILE
